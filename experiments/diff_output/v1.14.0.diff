1,2c1
< SciPy 1.14.0 Release Notes
< =====================
---
> # SciPy 1.14.0 Release Notes
4c3
< SciPy `1.14.0` is the culmination of 3 months of hard work. It contains
---
> SciPy 1.14.0 is the culmination of 3 months of hard work. It contains
11c10
< run your code with ``python -Wd`` and check for ``DeprecationWarning`` s).
---
> run your code with `python -Wd` and check for `DeprecationWarning` s).
13a13,14
> This release requires Python 3.10+ and NumPy 1.23.5 or greater.
> For running on PyPy, PyPy3 6.0+ is required.
15c16
< This release requires Python `3.10+` and NumPy `1.23.5` or greater.
---
> ## Highlights of this release
17c18,27
< For running on PyPy, PyPy3 `6.0+` is required.
---
> -   SciPy now supports the new Accelerate library introduced in macOS 13.3, and
>     has wheels built against Accelerate for macOS \>=14 resulting in significant
>     performance improvements for many linear algebra operations.
> -   A new method, `cobyqa`, has been added to [`scipy.optimize.minimize`](../reference/generated/scipy.optimize.minimize.html#scipy.optimize.minimize) - this
>     is an interface for COBYQA (Constrained Optimization BY Quadratic
>     Approximations), a derivative-free optimization solver, designed to
>     supersede COBYLA, developed by the Department of Applied Mathematics, The
>     Hong Kong Polytechnic University.
> -   [`scipy.sparse.linalg.spsolve_triangular`](../reference/generated/scipy.sparse.linalg.spsolve_triangular.html#scipy.sparse.linalg.spsolve_triangular) is now more than an order of
>     magnitude faster in many cases.
18a29
> ## New features
20,31c31
< Highlights of this release
< ===================
< - SciPy now supports the new Accelerate library introduced in macOS 13.3, and
<   has wheels built against Accelerate for macOS >=14 resulting in significant
<   performance improvements for many linear algebra operations.
< - A new method, ``cobyqa``, has been added to `scipy.optimize.minimize` - this
<   is an interface for COBYQA (Constrained Optimization BY Quadratic
<   Approximations), a derivative-free optimization solver, designed to
<   supersede COBYLA, developed by the Department of Applied Mathematics, The
<   Hong Kong Polytechnic University.
< - `scipy.sparse.linalg.spsolve_triangular` is now more than an order of
<   magnitude faster in many cases.
---
> ### [`scipy.fft`](../reference/fft.html#module-scipy.fft) improvements
32a33,35
> -   A new function, [`scipy.fft.prev_fast_len`](../reference/generated/scipy.fft.prev_fast_len.html#scipy.fft.prev_fast_len), has been added. This function
>     finds the largest composite of FFT radices that is less than the target
>     length. It is useful for discarding a minimal number of samples before FFT.
34,35c37
< New features
< ==========
---
> ### [`scipy.io`](../reference/io.html#module-scipy.io) improvements
37,41c39,40
< `scipy.fft` improvements
< ========================
< - A new function, `scipy.fft.prev_fast_len`, has been added. This function
<   finds the largest composite of FFT radices that is less than the target
<   length. It is useful for discarding a minimal number of samples before FFT.
---
> -   `wavfile` now supports reading and writing of `wav` files in the RF64
>     format, allowing files greater than 4 GB in size to be handled.
43,46c42
< `scipy.io` improvements
< =======================
< - ``wavfile`` now supports reading and writing of ``wav`` files in the RF64
<   format, allowing files greater than 4 GB in size to be handled.
---
> ### [`scipy.constants`](../reference/constants.html#module-scipy.constants) improvements
48,50c44
< `scipy.constants` improvements
< ==============================
< - Experimental support for the array API standard has been added.
---
> -   Experimental support for the array API standard has been added.
51a46
> ### [`scipy.interpolate`](../reference/interpolate.html#module-scipy.interpolate) improvements
53,56c48,49
< `scipy.interpolate` improvements
< ================================
< - `scipy.interpolate.Akima1DInterpolator` now supports extrapolation via the
<   ``extrapolate`` argument.
---
> -   [`scipy.interpolate.Akima1DInterpolator`](../reference/generated/scipy.interpolate.Akima1DInterpolator.html#scipy.interpolate.Akima1DInterpolator) now supports extrapolation via the
>     `extrapolate` argument.
58,69c51
< `scipy.optimize` improvements
< =============================
< - `scipy.optimize.HessianUpdateStrategy` now also accepts square arrays for
<   ``init_scale``.
< - A new method, ``cobyqa``, has been added to `scipy.optimize.minimize` - this
<   is an interface for COBYQA (Constrained Optimization BY Quadratic
<   Approximations), a derivative-free optimization solver, designed to
<   supersede COBYLA, developed by the Department of Applied Mathematics, The
<   Hong Kong Polytechnic University.
< - There are some performance improvements in
<   `scipy.optimize.differential_evolution`.
< - `scipy.optimize.approx_fprime` now has linear space complexity.
---
> ### [`scipy.optimize`](../reference/optimize.html#module-scipy.optimize) improvements
70a53,62
> -   [`scipy.optimize.HessianUpdateStrategy`](../reference/generated/scipy.optimize.HessianUpdateStrategy.html#scipy.optimize.HessianUpdateStrategy) now also accepts square arrays for
>     `init_scale`.
> -   A new method, `cobyqa`, has been added to [`scipy.optimize.minimize`](../reference/generated/scipy.optimize.minimize.html#scipy.optimize.minimize) - this
>     is an interface for COBYQA (Constrained Optimization BY Quadratic
>     Approximations), a derivative-free optimization solver, designed to
>     supersede COBYLA, developed by the Department of Applied Mathematics, The
>     Hong Kong Polytechnic University.
> -   There are some performance improvements in
>     [`scipy.optimize.differential_evolution`](../reference/generated/scipy.optimize.differential_evolution.html#scipy.optimize.differential_evolution).
> -   [`scipy.optimize.approx_fprime`](../reference/generated/scipy.optimize.approx_fprime.html#scipy.optimize.approx_fprime) now has linear space complexity.
72,76c64
< `scipy.signal` improvements
< ===========================
< - `scipy.signal.minimum_phase` has a new argument ``half``, allowing the
<   provision of a filter of the same length as the linear-phase FIR filter
<   coefficients and with the same magnitude spectrum.
---
> ### [`scipy.signal`](../reference/signal.html#module-scipy.signal) improvements
77a66,68
> -   [`scipy.signal.minimum_phase`](../reference/generated/scipy.signal.minimum_phase.html#scipy.signal.minimum_phase) has a new argument `half`, allowing the
>     provision of a filter of the same length as the linear-phase FIR filter
>     coefficients and with the same magnitude spectrum.
79,95c70
< `scipy.sparse` improvements
< ===========================
< - Sparse arrays now support 1D shapes in COO, DOK and CSR formats.
<   These are all the formats we currently intend to support 1D shapes.
<   Other sparse array formats raise an exception for 1D input.
< - Sparse array methods min/nanmin/argmin and max analogs now return 1D arrays.
<   Results are still COO format sparse arrays for min/nanmin and
<   dense ``np.ndarray`` for argmin.
< - Iterating over ``csr_array`` or ``csc_array`` yields 1D (CSC) arrays.
< - Sparse matrix and array objects improve their ``repr`` and ``str`` output.
< - A special case has been added to handle multiplying a ``dia_array`` by a
<   scalar, which avoids a potentially costly conversion to CSR format.
< - `scipy.sparse.csgraph.yen` has been added, allowing usage of Yen's K-Shortest
<   Paths algorithm on a directed on undirected graph.
< - Addition between DIA-format sparse arrays and matrices is now faster.
< - `scipy.sparse.linalg.spsolve_triangular` is now more than an order of
<   magnitude faster in many cases.
---
> ### [`scipy.sparse`](../reference/sparse.html#module-scipy.sparse) improvements
96a72,86
> -   Sparse arrays now support 1D shapes in COO, DOK and CSR formats.
>     These are all the formats we currently intend to support 1D shapes.
>     Other sparse array formats raise an exception for 1D input.
> -   Sparse array methods min/nanmin/argmin and max analogs now return 1D arrays.
>     Results are still COO format sparse arrays for min/nanmin and
>     dense `np.ndarray` for argmin.
> -   Iterating over `csr_array` or `csc_array` yields 1D (CSC) arrays.
> -   Sparse matrix and array objects improve their `repr` and `str` output.
> -   A special case has been added to handle multiplying a `dia_array` by a
>     scalar, which avoids a potentially costly conversion to CSR format.
> -   [`scipy.sparse.csgraph.yen`](../reference/generated/scipy.sparse.csgraph.yen.html#scipy.sparse.csgraph.yen) has been added, allowing usage of Yen's K-Shortest
>     Paths algorithm on a directed on undirected graph.
> -   Addition between DIA-format sparse arrays and matrices is now faster.
> -   [`scipy.sparse.linalg.spsolve_triangular`](../reference/generated/scipy.sparse.linalg.spsolve_triangular.html#scipy.sparse.linalg.spsolve_triangular) is now more than an order of
>     magnitude faster in many cases.
98,103c88
< `scipy.spatial` improvements
< ============================
< - ``Rotation`` supports an alternative "scalar-first" convention of quaternion
<   component ordering. It is available via the keyword argument ``scalar_first``
<   of ``from_quat`` and ``as_quat`` methods.
< - Some minor performance improvements for inverting of ``Rotation`` objects.
---
> ### [`scipy.spatial`](../reference/spatial.html#module-scipy.spatial) improvements
105,112c90,93
< `scipy.special` improvements
< ============================
< - Added `scipy.special.log_wright_bessel`, for calculation of the logarithm of
<   Wright's Bessel function.
< - The relative error in `scipy.special.hyp2f1` calculations has improved
<   substantially.
< - Improved behavior of ``boxcox``, ``inv_boxcox``, ``boxcox1p``, and
<   ``inv_boxcox1p`` by preventing premature overflow.
---
> -   `Rotation` supports an alternative "scalar-first" convention of quaternion
>     component ordering. It is available via the keyword argument `scalar_first`
>     of `from_quat` and `as_quat` methods.
> -   Some minor performance improvements for inverting of `Rotation` objects.
113a95
> ### [`scipy.special`](../reference/special.html#module-scipy.special) improvements
115,126c97,102
< `scipy.stats` improvements
< ==========================
< - A new function `scipy.stats.power` can be used for simulating the power
<   of a hypothesis test with respect to a specified alternative.
< - The Irwin-Hall (AKA Uniform Sum) distribution has been added as
<   `scipy.stats.irwinhall`.
< - Exact p-value calculations of `scipy.stats.mannwhitneyu` are much faster
<   and use less memory.
< - `scipy.stats.pearsonr` now accepts n-D arrays and computes the statistic
<   along a specified ``axis``.
< - `scipy.stats.kstat`, `scipy.stats.kstatvar`, and `scipy.stats.bartlett`
<   are faster at performing calculations along an axis of a large n-D array.
---
> -   Added [`scipy.special.log_wright_bessel`](../reference/generated/scipy.special.log_wright_bessel.html#scipy.special.log_wright_bessel), for calculation of the logarithm of
>     Wright's Bessel function.
> -   The relative error in [`scipy.special.hyp2f1`](../reference/generated/scipy.special.hyp2f1.html#scipy.special.hyp2f1) calculations has improved
>     substantially.
> -   Improved behavior of `boxcox`, `inv_boxcox`, `boxcox1p`, and
>     `inv_boxcox1p` by preventing premature overflow.
127a104
> ### [`scipy.stats`](../reference/stats.html#module-scipy.stats) improvements
128a106,115
> -   A new function [`scipy.stats.power`](../reference/generated/scipy.stats.power.html#scipy.stats.power) can be used for simulating the power
>     of a hypothesis test with respect to a specified alternative.
> -   The Irwin-Hall (AKA Uniform Sum) distribution has been added as
>     [`scipy.stats.irwinhall`](../reference/generated/scipy.stats.irwinhall.html#scipy.stats.irwinhall).
> -   Exact p-value calculations of [`scipy.stats.mannwhitneyu`](../reference/generated/scipy.stats.mannwhitneyu.html#scipy.stats.mannwhitneyu) are much faster
>     and use less memory.
> -   [`scipy.stats.pearsonr`](../reference/generated/scipy.stats.pearsonr.html#scipy.stats.pearsonr) now accepts n-D arrays and computes the statistic
>     along a specified `axis`.
> -   [`scipy.stats.kstat`](../reference/generated/scipy.stats.kstat.html#scipy.stats.kstat), [`scipy.stats.kstatvar`](../reference/generated/scipy.stats.kstatvar.html#scipy.stats.kstatvar), and [`scipy.stats.bartlett`](../reference/generated/scipy.stats.bartlett.html#scipy.stats.bartlett)
>     are faster at performing calculations along an axis of a large n-D array.
130,132c117,119
< Array API Standard Support
< =====================
< *Experimental* support for array libraries other than NumPy has been added to
---
> ## Array API Standard Support
> 
> Experimental support for array libraries other than NumPy has been added to
134c121
< these features by setting an environment variable ``SCIPY_ARRAY_API=1`` and
---
> these features by setting an environment variable `SCIPY_ARRAY_API=1` and
136d122
< 
139,142c125,169
< - `scipy.cluster`
< - `scipy.fft`
< - `scipy.constants`
< - `scipy.special`: (select functions)
---
> -   [`scipy.cluster`](../reference/cluster.html#module-scipy.cluster)
> -   [`scipy.fft`](../reference/fft.html#module-scipy.fft)
> -   [`scipy.constants`](../reference/constants.html#module-scipy.constants)
> -   [`scipy.special`](../reference/special.html#module-scipy.special): (select functions)
>     -   [`scipy.special.log_ndtr`](../reference/generated/scipy.special.log_ndtr.html#scipy.special.log_ndtr)
>     -   [`scipy.special.ndtr`](../reference/generated/scipy.special.ndtr.html#scipy.special.ndtr)
>     -   [`scipy.special.ndtri`](../reference/generated/scipy.special.ndtri.html#scipy.special.ndtri)
>     -   [`scipy.special.erf`](../reference/generated/scipy.special.erf.html#scipy.special.erf)
>     -   [`scipy.special.erfc`](../reference/generated/scipy.special.erfc.html#scipy.special.erfc)
>     -   [`scipy.special.i0`](../reference/generated/scipy.special.i0.html#scipy.special.i0)
>     -   [`scipy.special.i0e`](../reference/generated/scipy.special.i0e.html#scipy.special.i0e)
>     -   [`scipy.special.i1`](../reference/generated/scipy.special.i1.html#scipy.special.i1)
>     -   [`scipy.special.i1e`](../reference/generated/scipy.special.i1e.html#scipy.special.i1e)
>     -   [`scipy.special.gammaln`](../reference/generated/scipy.special.gammaln.html#scipy.special.gammaln)
>     -   [`scipy.special.gammainc`](../reference/generated/scipy.special.gammainc.html#scipy.special.gammainc)
>     -   [`scipy.special.gammaincc`](../reference/generated/scipy.special.gammaincc.html#scipy.special.gammaincc)
>     -   [`scipy.special.logit`](../reference/generated/scipy.special.logit.html#scipy.special.logit)
>     -   [`scipy.special.expit`](../reference/generated/scipy.special.expit.html#scipy.special.expit)
>     -   [`scipy.special.entr`](../reference/generated/scipy.special.entr.html#scipy.special.entr)
>     -   [`scipy.special.rel_entr`](../reference/generated/scipy.special.rel_entr.html#scipy.special.rel_entr)
>     -   [`scipy.special.xlogy`](../reference/generated/scipy.special.xlogy.html#scipy.special.xlogy)
>     -   [`scipy.special.chdtrc`](../reference/generated/scipy.special.chdtrc.html#scipy.special.chdtrc)
> -   [`scipy.stats`](../reference/stats.html#module-scipy.stats): (select functions)
>     -   [`scipy.stats.describe`](../reference/generated/scipy.stats.describe.html#scipy.stats.describe)
>     -   [`scipy.stats.moment`](../reference/generated/scipy.stats.moment.html#scipy.stats.moment)
>     -   [`scipy.stats.skew`](../reference/generated/scipy.stats.skew.html#scipy.stats.skew)
>     -   [`scipy.stats.kurtosis`](../reference/generated/scipy.stats.kurtosis.html#scipy.stats.kurtosis)
>     -   [`scipy.stats.kstat`](../reference/generated/scipy.stats.kstat.html#scipy.stats.kstat)
>     -   [`scipy.stats.kstatvar`](../reference/generated/scipy.stats.kstatvar.html#scipy.stats.kstatvar)
>     -   [`scipy.stats.circmean`](../reference/generated/scipy.stats.circmean.html#scipy.stats.circmean)
>     -   [`scipy.stats.circvar`](../reference/generated/scipy.stats.circvar.html#scipy.stats.circvar)
>     -   [`scipy.stats.circstd`](../reference/generated/scipy.stats.circstd.html#scipy.stats.circstd)
>     -   [`scipy.stats.entropy`](../reference/generated/scipy.stats.entropy.html#scipy.stats.entropy)
>     -   [`scipy.stats.variation`](../reference/generated/scipy.stats.variation.html#scipy.stats.variation)
>     -   [`scipy.stats.sem`](../reference/generated/scipy.stats.sem.html#scipy.stats.sem)
>     -   [`scipy.stats.ttest_1samp`](../reference/generated/scipy.stats.ttest_1samp.html#scipy.stats.ttest_1samp)
>     -   [`scipy.stats.pearsonr`](../reference/generated/scipy.stats.pearsonr.html#scipy.stats.pearsonr)
>     -   [`scipy.stats.chisquare`](../reference/generated/scipy.stats.chisquare.html#scipy.stats.chisquare)
>     -   [`scipy.stats.skewtest`](../reference/generated/scipy.stats.skewtest.html#scipy.stats.skewtest)
>     -   [`scipy.stats.kurtosistest`](../reference/generated/scipy.stats.kurtosistest.html#scipy.stats.kurtosistest)
>     -   [`scipy.stats.normaltest`](../reference/generated/scipy.stats.normaltest.html#scipy.stats.normaltest)
>     -   [`scipy.stats.jarque_bera`](../reference/generated/scipy.stats.jarque_bera.html#scipy.stats.jarque_bera)
>     -   [`scipy.stats.bartlett`](../reference/generated/scipy.stats.bartlett.html#scipy.stats.bartlett)
>     -   [`scipy.stats.power_divergence`](../reference/generated/scipy.stats.power_divergence.html#scipy.stats.power_divergence)
>     -   [`scipy.stats.monte_carlo_test`](../reference/generated/scipy.stats.monte_carlo_test.html#scipy.stats.monte_carlo_test)
144,161c171
<   - `scipy.special.log_ndtr`
<   - `scipy.special.ndtr`
<   - `scipy.special.ndtri`
<   - `scipy.special.erf`
<   - `scipy.special.erfc`
<   - `scipy.special.i0`
<   - `scipy.special.i0e`
<   - `scipy.special.i1`
<   - `scipy.special.i1e`
<   - `scipy.special.gammaln`
<   - `scipy.special.gammainc`
<   - `scipy.special.gammaincc`
<   - `scipy.special.logit`
<   - `scipy.special.expit`
<   - `scipy.special.entr`
<   - `scipy.special.rel_entr`
<   - `scipy.special.xlogy`
<   - `scipy.special.chdtrc`
---
> ## Deprecated features
163,204c173,185
< - `scipy.stats`: (select functions)
< 
<   - `scipy.stats.describe`
<   - `scipy.stats.moment`
<   - `scipy.stats.skew`
<   - `scipy.stats.kurtosis`
<   - `scipy.stats.kstat`
<   - `scipy.stats.kstatvar`
<   - `scipy.stats.circmean`
<   - `scipy.stats.circvar`
<   - `scipy.stats.circstd`
<   - `scipy.stats.entropy`
<   - `scipy.stats.variation`
<   - `scipy.stats.sem`
<   - `scipy.stats.ttest_1samp`
<   - `scipy.stats.pearsonr`
<   - `scipy.stats.chisquare`
<   - `scipy.stats.skewtest`
<   - `scipy.stats.kurtosistest`
<   - `scipy.stats.normaltest`
<   - `scipy.stats.jarque_bera`
<   - `scipy.stats.bartlett`
<   - `scipy.stats.power_divergence`
<   - `scipy.stats.monte_carlo_test`
< 
< 
< 
< Deprecated features
< ================
< - `scipy.stats.gstd`, `scipy.stats.chisquare`, and
<   `scipy.stats.power_divergence` have deprecated support for masked array
<   input.
< - `scipy.stats.linregress` has deprecated support for specifying both samples
<   in one argument; ``x`` and ``y`` are to be provided as separate arguments.
< - The ``conjtransp`` method for `scipy.sparse.dok_array` and
<   `scipy.sparse.dok_matrix` has been deprecated and will be removed in SciPy
<   1.16.0.
< - The option ``quadrature="trapz"`` in `scipy.integrate.quad_vec` has been
<   deprecated in favour of ``quadrature="trapezoid"`` and will be removed in
<   SciPy 1.16.0.
< - ``scipy.special.{comb,perm}`` have deprecated support for use of ``exact=True`` in
<   conjunction with non-integral ``N`` and/or ``k``.
---
> -   [`scipy.stats.gstd`](../reference/generated/scipy.stats.gstd.html#scipy.stats.gstd), [`scipy.stats.chisquare`](../reference/generated/scipy.stats.chisquare.html#scipy.stats.chisquare), and
>     [`scipy.stats.power_divergence`](../reference/generated/scipy.stats.power_divergence.html#scipy.stats.power_divergence) have deprecated support for masked array
>     input.
> -   [`scipy.stats.linregress`](../reference/generated/scipy.stats.linregress.html#scipy.stats.linregress) has deprecated support for specifying both samples
>     in one argument; `x` and `y` are to be provided as separate arguments.
> -   The `conjtransp` method for [`scipy.sparse.dok_array`](../reference/generated/scipy.sparse.dok_array.html#scipy.sparse.dok_array) and
>     [`scipy.sparse.dok_matrix`](../reference/generated/scipy.sparse.dok_matrix.html#scipy.sparse.dok_matrix) has been deprecated and will be removed in SciPy
>     1.16.0.
> -   The option `quadrature="trapz"` in [`scipy.integrate.quad_vec`](../reference/generated/scipy.integrate.quad_vec.html#scipy.integrate.quad_vec) has been
>     deprecated in favour of `quadrature="trapezoid"` and will be removed in
>     SciPy 1.16.0.
> -   `scipy.special.{comb,perm}` have deprecated support for use of `exact=True` in
>     conjunction with non-integral `N` and/or `k`.
205a187
> ## Backwards incompatible changes
206a189,193
> -   Many [`scipy.stats`](../reference/stats.html#module-scipy.stats) functions now produce a standardized warning message when
>     an input sample is too small (e.g. zero size). Previously, these functions
>     may have raised an error, emitted one or more less informative warnings, or
>     emitted no warnings. In most cases, returned results are unchanged; in almost
>     all cases the correct result is `NaN`.
208,214c195
< Backwards incompatible changes
< =========================
< - Many `scipy.stats` functions now produce a standardized warning message when
<   an input sample is too small (e.g. zero size). Previously, these functions
<   may have raised an error, emitted one or more less informative warnings, or
<   emitted no warnings. In most cases, returned results are unchanged; in almost
<   all cases the correct result is ``NaN``.
---
> ### Expired deprecations
216,217d196
< Expired deprecations
< ====================
221,251c200,236
< - Several previously deprecated methods for sparse arrays were removed:
<   ``asfptype``, ``getrow``, ``getcol``, ``get_shape``, ``getmaxprint``,
<   ``set_shape``, ``getnnz``, and ``getformat``. Additionally, the ``.A`` and
<   ``.H`` attributes were removed.
< - ``scipy.integrate.{simps,trapz,cumtrapz}`` have been removed in favour of
<   ``simpson``, ``trapezoid``, and ``cumulative_trapezoid``.
< - The ``tol`` argument of ``scipy.sparse.linalg.{bcg,bicstab,cg,cgs,gcrotmk,
<   mres,lgmres,minres,qmr,tfqmr}`` has been removed in favour of ``rtol``.
<   Furthermore, the default value of ``atol`` for these functions has changed
<   to ``0.0``.
< - The ``restrt`` argument of `scipy.sparse.linalg.gmres` has been removed in
<   favour of ``restart``.
< - The ``initial_lexsort`` argument of `scipy.stats.kendalltau` has been
<   removed.
< - The ``cond`` and ``rcond`` arguments of `scipy.linalg.pinv` have been
<   removed.
< - The ``even`` argument of `scipy.integrate.simpson` has been removed.
< - The ``turbo`` and ``eigvals`` arguments from ``scipy.linalg.{eigh,eigvalsh}``
<   have been removed.
< - The ``legacy`` argument of `scipy.special.comb` has been removed.
< - The ``hz``/``nyq`` argument of ``signal.{firls, firwin, firwin2, remez}`` has
<   been removed.
< - Objects that weren't part of the public interface but were accessible through
<   deprecated submodules have been removed.
< - ``float128``, ``float96``, and object arrays now raise an error in
<   `scipy.signal.medfilt` and `scipy.signal.order_filter`.
< - ``scipy.interpolate.interp2d`` has been replaced by an empty stub (to be
<   removed completely in the future).
< - Coinciding with changes to function signatures (e.g. removal of a deprecated
<   keyword), we had deprecated positional use of keyword arguments for the
<   affected functions, which will now raise an error. Affected functions are:
---
> -   Several previously deprecated methods for sparse arrays were removed:
>     `asfptype`, `getrow`, `getcol`, `get_shape`, `getmaxprint`,
>     `set_shape`, `getnnz`, and `getformat`. Additionally, the `.A` and
>     `.H` attributes were removed.
> -   `scipy.integrate.{simps,trapz,cumtrapz}` have been removed in favour of
>     `simpson`, `trapezoid`, and `cumulative_trapezoid`.
> -   The `tol` argument of `scipy.sparse.linalg.{bcg,bicstab,cg,cgs,gcrotmk, mres,lgmres,minres,qmr,tfqmr}` has been removed in favour of `rtol`.
>     Furthermore, the default value of `atol` for these functions has changed
>     to `0.0`.
> -   The `restrt` argument of [`scipy.sparse.linalg.gmres`](../reference/generated/scipy.sparse.linalg.gmres.html#scipy.sparse.linalg.gmres) has been removed in
>     favour of `restart`.
> -   The `initial_lexsort` argument of [`scipy.stats.kendalltau`](../reference/generated/scipy.stats.kendalltau.html#scipy.stats.kendalltau) has been
>     removed.
> -   The `cond` and `rcond` arguments of [`scipy.linalg.pinv`](../reference/generated/scipy.linalg.pinv.html#scipy.linalg.pinv) have been
>     removed.
> -   The `even` argument of [`scipy.integrate.simpson`](../reference/generated/scipy.integrate.simpson.html#scipy.integrate.simpson) has been removed.
> -   The `turbo` and `eigvals` arguments from `scipy.linalg.{eigh,eigvalsh}`
>     have been removed.
> -   The `legacy` argument of [`scipy.special.comb`](../reference/generated/scipy.special.comb.html#scipy.special.comb) has been removed.
> -   The `hz`/`nyq` argument of `signal.{firls, firwin, firwin2, remez}` has
>     been removed.
> -   Objects that weren't part of the public interface but were accessible through
>     deprecated submodules have been removed.
> -   `float128`, `float96`, and object arrays now raise an error in
>     [`scipy.signal.medfilt`](../reference/generated/scipy.signal.medfilt.html#scipy.signal.medfilt) and [`scipy.signal.order_filter`](../reference/generated/scipy.signal.order_filter.html#scipy.signal.order_filter).
> -   `scipy.interpolate.interp2d` has been replaced by an empty stub (to be
>     removed completely in the future).
> -   Coinciding with changes to function signatures (e.g. removal of a deprecated
>     keyword), we had deprecated positional use of keyword arguments for the
>     affected functions, which will now raise an error. Affected functions are:
>     -   `sparse.linalg.{bicg, bicgstab, cg, cgs, gcrotmk, gmres, lgmres, minres, qmr, tfqmr}`
>     -   `stats.kendalltau`
>     -   `linalg.pinv`
>     -   `integrate.simpson`
>     -   `linalg.{eigh,eigvalsh}`
>     -   `special.comb`
>     -   `signal.{firls, firwin, firwin2, remez}`
253,260c238
<   - ``sparse.linalg.{bicg, bicgstab, cg, cgs, gcrotmk, gmres, lgmres, minres,
<     qmr, tfqmr}``
<   - ``stats.kendalltau``
<   - ``linalg.pinv``
<   - ``integrate.simpson``
<   - ``linalg.{eigh,eigvalsh}``
<   - ``special.comb``
<   - ``signal.{firls, firwin, firwin2, remez}``
---
> ## Other changes
261a240,248
> -   SciPy now uses C17 as the C standard to build with, instead of C99. The C++
>     standard remains C++17.
> -   macOS Accelerate, which got a major upgrade in macOS 13.3, is now supported.
>     This results in significant performance improvements for linear algebra
>     operations, as well as smaller binary wheels.
> -   Cross-compilation should be smoother and QEMU or similar is no longer needed
>     to run the cross interpreter.
> -   Experimental array API support for the JAX backend has been added to several
>     parts of SciPy.
262a250
> ## Authors
264,274c252,337
< Other changes
< ===========
< - SciPy now uses C17 as the C standard to build with, instead of C99. The C++
<   standard remains C++17.
< - macOS Accelerate, which got a major upgrade in macOS 13.3, is now supported.
<   This results in significant performance improvements for linear algebra
<   operations, as well as smaller binary wheels.
< - Cross-compilation should be smoother and QEMU or similar is no longer needed
<   to run the cross interpreter.
< - Experimental array API support for the JAX backend has been added to several
<   parts of SciPy.
---
> -   Name (commits)
> -   h-vetinari (34)
> -   Steven Adams (1) +
> -   Max Aehle (1) +
> -   Ataf Fazledin Ahamed (2) +
> -   Luiz Eduardo Amaral (1) +
> -   Trinh Quoc Anh (1) +
> -   Miguel A. Batalla (7) +
> -   Tim Beyer (1) +
> -   Andrea Blengino (1) +
> -   boatwrong (1)
> -   Jake Bowhay (51)
> -   Dietrich Brunn (2)
> -   Evgeni Burovski (177)
> -   Tim Butters (7) +
> -   CJ Carey (5)
> -   Sean Cheah (46)
> -   Lucas Colley (73)
> -   Giuseppe "Peppe" Dilillo (1) +
> -   DWesl (2)
> -   Pieter Eendebak (5)
> -   Kenji S Emerson (1) +
> -   Jonas Eschle (1)
> -   fancidev (2)
> -   Anthony Frazier (1) +
> -   Ilan Gold (1) +
> -   Ralf Gommers (125)
> -   Rohit Goswami (28)
> -   Ben Greiner (1) +
> -   Lorenzo Gualniera (1) +
> -   Matt Haberland (260)
> -   Shawn Hsu (1) +
> -   Budjen Jovan (3) +
> -   Jozsef Kutas (1)
> -   Eric Larson (3)
> -   Gregory R. Lee (4)
> -   Philip Loche (1) +
> -   Christian Lorentzen (5)
> -   Sijo Valayakkad Manikandan (2) +
> -   marinelay (2) +
> -   Nikolay Mayorov (1)
> -   Nicholas McKibben (2)
> -   Melissa Weber Mendonça (7)
> -   João Mendes (1) +
> -   Samuel Le Meur-Diebolt (1) +
> -   Tomiță Militaru (2) +
> -   Andrew Nelson (35)
> -   Lysandros Nikolaou (1)
> -   Nick ODell (5) +
> -   Jacob Ogle (1) +
> -   Pearu Peterson (1)
> -   Matti Picus (5)
> -   Ilhan Polat (9)
> -   pwcnorthrop (3) +
> -   Bharat Raghunathan (1)
> -   Tom M. Ragonneau (2) +
> -   Tyler Reddy (101)
> -   Pamphile Roy (18)
> -   Atsushi Sakai (9)
> -   Daniel Schmitz (5)
> -   Julien Schueller (2) +
> -   Dan Schult (13)
> -   Tomer Sery (7)
> -   Scott Shambaugh (4)
> -   Tuhin Sharma (1) +
> -   Sheila-nk (4)
> -   Skylake (1) +
> -   Albert Steppi (215)
> -   Kai Striega (6)
> -   Zhibing Sun (2) +
> -   Nimish Telang (1) +
> -   toofooboo (1) +
> -   tpl2go (1) +
> -   Edgar Andrés Margffoy Tuay (44)
> -   Andrew Valentine (1)
> -   Valerix (1) +
> -   Christian Veenhuis (1)
> -   void (2) +
> -   Warren Weckesser (3)
> -   Xuefeng Xu (1)
> -   Rory Yorke (1)
> -   Xiao Yuan (1)
> -   Irwin Zaid (35)
> -   Elmar Zander (1) +
> -   Zaikun ZHANG (1)
> -   ਗਗਨਦੀਪ ਸਿੰਘ (Gagandeep Singh) (4) +
276,366d338
< 
< 
< Authors
< ======
< * Name (commits)
< * h-vetinari (34)
< * Steven Adams (1) +
< * Max Aehle (1) +
< * Ataf Fazledin Ahamed (2) +
< * Luiz Eduardo Amaral (1) +
< * Trinh Quoc Anh (1) +
< * Miguel A. Batalla (7) +
< * Tim Beyer (1) +
< * Andrea Blengino (1) +
< * boatwrong (1)
< * Jake Bowhay (51)
< * Dietrich Brunn (2)
< * Evgeni Burovski (177)
< * Tim Butters (7) +
< * CJ Carey (5)
< * Sean Cheah (46)
< * Lucas Colley (73)
< * Giuseppe "Peppe" Dilillo (1) +
< * DWesl (2)
< * Pieter Eendebak (5)
< * Kenji S Emerson (1) +
< * Jonas Eschle (1)
< * fancidev (2)
< * Anthony Frazier (1) +
< * Ilan Gold (1) +
< * Ralf Gommers (125)
< * Rohit Goswami (28)
< * Ben Greiner (1) +
< * Lorenzo Gualniera (1) +
< * Matt Haberland (260)
< * Shawn Hsu (1) +
< * Budjen Jovan (3) +
< * Jozsef Kutas (1)
< * Eric Larson (3)
< * Gregory R. Lee (4)
< * Philip Loche (1) +
< * Christian Lorentzen (5)
< * Sijo Valayakkad Manikandan (2) +
< * marinelay (2) +
< * Nikolay Mayorov (1)
< * Nicholas McKibben (2)
< * Melissa Weber Mendonça (7)
< * João Mendes (1) +
< * Samuel Le Meur-Diebolt (1) +
< * Tomiță Militaru (2) +
< * Andrew Nelson (35)
< * Lysandros Nikolaou (1)
< * Nick ODell (5) +
< * Jacob Ogle (1) +
< * Pearu Peterson (1)
< * Matti Picus (5)
< * Ilhan Polat (9)
< * pwcnorthrop (3) +
< * Bharat Raghunathan (1)
< * Tom M. Ragonneau (2) +
< * Tyler Reddy (101)
< * Pamphile Roy (18)
< * Atsushi Sakai (9)
< * Daniel Schmitz (5)
< * Julien Schueller (2) +
< * Dan Schult (13)
< * Tomer Sery (7)
< * Scott Shambaugh (4)
< * Tuhin Sharma (1) +
< * Sheila-nk (4)
< * Skylake (1) +
< * Albert Steppi (215)
< * Kai Striega (6)
< * Zhibing Sun (2) +
< * Nimish Telang (1) +
< * toofooboo (1) +
< * tpl2go (1) +
< * Edgar Andrés Margffoy Tuay (44)
< * Andrew Valentine (1)
< * Valerix (1) +
< * Christian Veenhuis (1)
< * void (2) +
< * Warren Weckesser (3)
< * Xuefeng Xu (1)
< * Rory Yorke (1)
< * Xiao Yuan (1)
< * Irwin Zaid (35)
< * Elmar Zander (1) +
< * Zaikun ZHANG (1)
< * ਗਗਨਦੀਪ ਸਿੰਘ (Gagandeep Singh) (4) +
< 
369c341,342
< This list of names is automatically generated, and may not be fully complete.
\ No newline at end of file
---
> This list of names is automatically generated, and may not be fully complete.
> 
